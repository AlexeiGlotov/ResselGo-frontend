name: Deploy to Server

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up SSH connection
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Stop docker, delete app, create temp env, if directory exists, docker rmi
        run: |
          ssh -o StrictHostKeyChecking=no -p ${{ secrets.SERVER_PORT }} lexa@${{ secrets.SERVER_IP }} "\
          if [ -d /root/app/frontapp ]; then \
              cd /root/app/frontapp && \
              docker compose down && \
              rm -r /root/app/frontapp; \
              DANG_IMG=$(docker images -f \"dangling=true\" -q) && \
              if [ -n \"$DANG_IMG\" ]; then \
                  docker rmi $DANG_IMG; \
              else \
                  echo 'No dangling images to remove.'; \
              fi; \
          else \
              echo 'Directory /root/app/frontapp does not exist, creating it'; \
              mkdir -p /root/app/frontapp; \
          fi"

      - name: Copy files to server
        run: |
          rsync -avz -e "ssh -o StrictHostKeyChecking=no -p ${{ secrets.SERVER_PORT }}" ./ lexa@${{ secrets.SERVER_IP }}:/root/app/frontapp

      - name: Create .env files
        run: |
          ssh -o StrictHostKeyChecking=no -p ${{ secrets.SERVER_PORT }} lexa@${{ secrets.SERVER_IP }} "\
          echo 'REACT_APP_API_URL=${{ secrets.REACT_APP_API_URL }}' >> /root/app/frontapp/.env"

      - name: Build docker compose
        run: ssh -o StrictHostKeyChecking=no -p ${{ secrets.SERVER_PORT }} lexa@${{ secrets.SERVER_IP }} "cd /root/app/frontapp && docker compose up -d --build"

      - name: Check Status and delete env
        run: |
          ssh -o StrictHostKeyChecking=no -p ${{ secrets.SERVER_PORT }} lexa@${{ secrets.SERVER_IP }} "\
          cd /root/app/frontapp && \
          docker compose ps && \
          truncate -s 0 .env"